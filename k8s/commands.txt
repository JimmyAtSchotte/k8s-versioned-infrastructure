# Install ingress controller
 minikube addons enable ingress

# Apply config/secrets
 kubectl apply -f config.yaml
 kubectl apply -f secret.yaml

# Deploy rabbit MQ cluster Operator
kubectl apply -f "https://github.com/rabbitmq/cluster-operator/releases/latest/download/cluster-operator.yml"

# Apply deployments
 kubectl apply -f registry.yaml
 kubectl apply -f admin-db.yaml
 kubectl apply -f admin-api.yaml
 kubectl apply -f admin.yaml 

# Srt docket context to default (fixes error: Unable to resolve the current Docker CLI context "default": context "default":)
docker context use default
  
# Set envrionments variable to push to registry inside k8s
& minikube -p minikube docker-env --shell powershell | Invoke-Expression
 
# Build and push admin to registry
 docker build -t localhost:5000/admin . 
 docker push localhost:5000/admin 
  
 # Build and push admin api to registry
 docker build -t localhost:5000/admin-api . 
 docker push localhost:5000/admin-api  
  
 # Restart admin with latest image
 kubectl rollout restart deployment admin-deployment
 kubectl rollout restart deployment admin-api-deployment

  # Create tunnel to registry:
  minikube tunnel -c
  
  # lookup dns
 kubectl run -i --tty --rm debug --image=busybox --restart=Never -- nslookup admin-api-service.default.svc.cluster.local
kubectl run -i --tty --rm debug --image=busybox --restart=Never -- nslookup rabbitmq-deployment.default.svc.cluster.local

 # curl test
 kubectl run -i --tty --rm debug --image=curlimages/curl --restart=Never -- curl http://admin-api-service.default.svc.cluster.local/weatherforecast

# start minicube
minikube start --driver=docker